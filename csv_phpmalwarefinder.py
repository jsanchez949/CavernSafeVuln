import csv
import os
import re


# Para esta herramienta se debe instalar sudo apt-get install yara Clonar repositorio
# https://github.com/nbs-system/php-malware-finder.git Se comprueba si el bucle if devuelve true (la herramienta se
# ejecuto correctamente) si devuelve false significara que no ha sido posible su escaneo

def generar_csv():
    print ("--------- Inicio de la herramienta PHP_Malware_Finder ----------")
    #Ruta de la herramienta phpmalwarefinder
    ejecucion = "phpmalwarefinder ."

    # Ejecuta el comando del sistema y obtiene la salida como un flujo de datos
    output = os.popen(ejecucion).read()

    # Filtros de tipos de vulnerabilidades
    nonPrintableChars = re.compile("NonPrintableChars")
    obfuscatedPhp = re.compile("ObfuscatedPhp")
    dodgyPhp = re.compile("DodgyPhp")
    dangerousPhp = re.compile("DangerousPhp")
    dodgyStrings = re.compile("DodgyStrings")

    # Contadores de los tipos de vulnerabilidades
    c_nonPrintableChars = 0
    c_obfuscatedPhp = 0
    c_dodgyPhp = 0
    c_dangerousPhp = 0
    c_dodgyStrings = 0
    count = 0

    # Abre el archivo en modo escritura
    with open('resultados/csv_php_mf.csv', 'w') as csvfile:

        # Crea un objeto escritor
        writer = csv.writer(csvfile)

        # Itera sobre las lineas de la salida del comando
        for line in output.splitlines():
            if "You should take a look" in line:
                break

            if re.search(nonPrintableChars, line):
                c_nonPrintableChars += 1
                count += 1
            if re.search(obfuscatedPhp, line):
                c_obfuscatedPhp += 1
                count += 1
            if re.search(dodgyPhp, line):
                c_dodgyPhp += 1
                count += 1
            if re.search(dangerousPhp, line):
                c_dangerousPhp += 1
                count += 1
            if re.search(dodgyStrings, line):
                c_dodgyStrings += 1
                count += 1

        writer.writerow(["Tipos vulnerabilidades", "N veces"])
        writer.writerow(["nonPrintableChars", c_nonPrintableChars])
        writer.writerow(["obfuscatedPhp", c_obfuscatedPhp])
        writer.writerow(["dodgyPhp", c_dodgyPhp])
        writer.writerow(["dangerousPhp", c_dangerousPhp])
        writer.writerow(["dodgyStrings", c_dodgyStrings])
        writer.writerow("")
        writer.writerow(["N de vulnerabilidades totales", count])
        print("Tipos vulnerabilidades", "N veces")
        print("nonPrintableChars", c_nonPrintableChars)
        print("obfuscatedPhp", c_obfuscatedPhp)
        print("dodgyPhp", c_dodgyPhp)
        print("dangerousPhp", c_dangerousPhp)
        print("dodgyStrings", c_dodgyStrings)
        print("")
        print("N de vulnerabilidades totales", count)
